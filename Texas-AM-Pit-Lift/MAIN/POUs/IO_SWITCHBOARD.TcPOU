<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="IO_SWITCHBOARD" Id="{a90d9e50-84d3-4175-8411-1c95f1ec50a2}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM IO_SWITCHBOARD
VAR CONSTANT
	STATE_TIMEOUT : INT := 50;
END_VAR
VAR
	state : SYSTEM_STATE;
	stateIdleCounter : INT;
	isConsoleActive : BOOL;
	isRemoteActive : BOOL;
	
	CONSOLE_DOWN_BUTTON_IN AT %I* : BOOL;
	CONSOLE_RUN_BUTTON_IN AT %I* : BOOL;
	CONSOLE_UP_BUTTON_IN AT %I* : BOOL;
	CONSOLE_RESET_BUTTON_IN AT %I* : BOOL;
	
	REMOTE_DOWN_BUTTON_IN AT %I* : BOOL;
	REMOTE_RUN_BUTTON_IN AT %I* : BOOL;
	REMOTE_UP_BUTTON_IN AT %I* : BOOL;
	REMOTE_RESET_BUTTON_IN AT %I* : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[isConsoleActive := (CONSOLE_DOWN_BUTTON_IN OR CONSOLE_RUN_BUTTON_IN OR CONSOLE_UP_BUTTON_IN);
isRemoteActive := (REMOTE_DOWN_BUTTON_IN OR REMOTE_RUN_BUTTON_IN OR REMOTE_UP_BUTTON_IN);

CASE state OF 
	SYSTEM_STATE.SYSTEM_READY :
		GV_LIFT.CONSOLE_ACTIVE_INDICATOR_OUT := FALSE;
		GV_LIFT.REMOTE_ACTIVE_INDICATOR_OUT := FALSE;
		IF isConsoleActive THEN
			state := SYSTEM_STATE.CONSOLE_CONTROL;
		ELSIF isRemoteActive THEN
			state := SYSTEM_STATE.REMOTE_CONTROL;
		END_IF
		
	SYSTEM_STATE.CONSOLE_CONTROL :
		IF isConsoleActive THEN
			IF CONSOLE_RUN_BUTTON_IN THEN
				GV_LIFT.RUN_BUTTON_OUT := CONSOLE_RUN_BUTTON_IN;
			ELSE
				GV_LIFT.DOWN_BUTTON_OUT := (CONSOLE_DOWN_BUTTON_IN AND HMI.bSoftDownLimFlag);
				GV_LIFT.UP_BUTTON_OUT := (CONSOLE_UP_BUTTON_IN AND HMI.bSoftUpLimFlag);
			END_IF
			stateIdleCounter := 0;
			GV_LIFT.CONSOLE_ACTIVE_INDICATOR_OUT := TRUE;
		ELSE
			stateIdleCounter := stateIdleCounter + 1;
			IF(stateIdleCounter >= STATE_TIMEOUT) THEN
				stateIdleCounter := 0;
				state := SYSTEM_STATE.SYSTEM_READY;
			END_IF
		END_IF
		
		SYSTEM_STATE.REMOTE_CONTROL :
		IF isRemoteActive THEN
			IF REMOTE_RUN_BUTTON_IN THEN
				GV_LIFT.RUN_BUTTON_OUT := REMOTE_RUN_BUTTON_IN;
			ELSE
				GV_LIFT.DOWN_BUTTON_OUT := (REMOTE_DOWN_BUTTON_IN AND HMI.bSoftDownLimFlag);
				GV_LIFT.UP_BUTTON_OUT := (REMOTE_UP_BUTTON_IN AND HMI.bSoftUpLimFlag);
			END_IF
			stateIdleCounter := 0;
			GV_LIFT.REMOTE_ACTIVE_INDICATOR_OUT := TRUE;
		ELSE
			stateIdleCounter := stateIdleCounter + 1;
			IF(stateIdleCounter >= STATE_TIMEOUT) THEN
				stateIdleCounter := 0;
				state := SYSTEM_STATE.SYSTEM_READY;
			END_IF
		END_IF
END_CASE

GV_LIFT.SYSTEM_RESET_BUTTON_IN := REMOTE_RESET_BUTTON_IN OR CONSOLE_RESET_BUTTON_IN;

GV_LIFT.DOWN_INDICATOR_OUT := GV_LIFT.DOWN_INDICATOR_IN;
GV_LIFT.UP_INDICATOR_OUT := GV_LIFT.UP_INDICATOR_IN;

GV_LIFT.CRUSH_PROTECTION_INDICATOR_OUT := NOT GV_LIFT.CRUSH_PROTECTION_INDICATOR_IN;

GV_LIFT.DOWNSTAGE_ESTOP_INDICATOR_OUT := NOT GV_LIFT.DOWNSTAGE_ESTOP_INDICATOR_IN;
GV_LIFT.UPSTAGE_ESTOP_INDICATOR_OUT := NOT GV_LIFT.UPSTAGE_ESTOP_INDICATOR_IN;
GV_LIFT.REMOTE_ESTOP_INDICATOR_OUT := NOT GV_LIFT.REMOTE_ESTOP_INDICATOR_IN;
GV_LIFT.PIT_ESTOP_INDICATOR_OUT := NOT GV_LIFT.PIT_ESTOP_INDICATOR_IN;
GV_LIFT.CONSOLE_ESTOP_INDICATOR_OUT := NOT GV_LIFT.CONSOLE_ESTOP_INDICATOR_IN;
GV_LIFT.PUMP_ESTOP_INDICATOR_OUT := NOT GV_LIFT.PUMP_ESTOP_INDICATOR_IN;

GV_LIFT.ESTOP_INDICATOR_OUT := GV_LIFT.ESTOP_INDICATOR_IN;

GV_LIFT.DOOR_1_INDICATOR_OUT := NOT GV_LIFT.DOOR_1_INDICATOR_IN;
GV_LIFT.DOOR_1_INDICATOR_LATCH_OUT := NOT GV_LIFT.DOOR_1_INDICATOR_LATCH_OUT;
GV_LIFT.DOOR_2_INDICATOR_OUT := NOT GV_LIFT.DOOR_2_INDICATOR_IN;
GV_LIFT.DOOR_2_INDICATOR_LATCH_OUT := NOT GV_LIFT.DOOR_2_INDICATOR_LATCH_OUT;
GV_LIFT.DOOR_3_INDICATOR_OUT := NOT GV_LIFT.DOOR_3_INDICATOR_IN;
GV_LIFT.DOOR_3_INDICATOR_LATCH_OUT := NOT GV_LIFT.DOOR_3_INDICATOR_LATCH_OUT;
GV_LIFT.DOOR_4_INDICATOR_OUT := NOT GV_LIFT.DOOR_4_INDICATOR_IN;
GV_LIFT.DOOR_4_INDICATOR_LATCH_OUT := NOT GV_LIFT.DOOR_4_INDICATOR_LATCH_OUT;

GV_LIFT.UP_LIMIT_INDICATOR_OUT := NOT GV_LIFT.UP_LIMIT_INDICATOR_IN;
GV_LIFT.UP_LIMIT_INDICATOR_LATCH_OUT := NOT GV_LIFT.UP_LIMIT_INDICATOR_LATCH_IN;
GV_LIFT.DOWN_LIMIT_INDICATOR_OUT := NOT GV_LIFT.DOWN_LIMIT_INDICATOR_IN;
GV_LIFT.DOWN_LIMIT_INDICATOR_LATCH_OUT := NOT GV_LIFT.DOWN_LIMIT_INDICATOR_LATCH_IN;
GV_LIFT.ULTIMATE_LIMIT_INDICATOR_OUT := NOT GV_LIFT.ULTIMATE_LIMIT_INDICATOR_IN;
GV_LIFT.ULTIMATE_LIMIT_INDICATOR_LATCH_OUT := NOT GV_LIFT.ULTIMATE_LIMIT_INDICATOR_LATCH_IN;]]></ST>
    </Implementation>
    <LineIds Name="IO_SWITCHBOARD">
      <LineId Id="120" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="116" Count="2" />
      <LineId Id="126" Count="0" />
      <LineId Id="124" Count="1" />
      <LineId Id="127" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="139" Count="2" />
      <LineId Id="138" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="143" Count="1" />
      <LineId Id="146" Count="1" />
      <LineId Id="149" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="152" Count="7" />
      <LineId Id="174" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="160" Count="5" />
      <LineId Id="151" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="69" Count="15" />
      <LineId Id="166" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="88" Count="1" />
      <LineId Id="170" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="172" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>