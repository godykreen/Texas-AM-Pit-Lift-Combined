<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="XML" Id="{6eef0ea7-4544-4415-8d0d-0f64a62ae60c}" SpecialFunc="None">
    <Declaration><![CDATA[ PROGRAM XML
VAR
   savedvalues     : ST_SavedStructure;
   fbXmlSrvWrite   : FB_XmlSrvWrite;
   fbXmlSrvRead    : FB_XmlSrvRead; 
   sFileFolder     : T_MaxString := '\Hard Disk\'; (* CE: '\Hard Disk\' *) (* Win10: '\C:\ *)
   sFileName       : T_MaxString := 'HMI-Saved-Positions.xml';
   //sFilePath 	   : T_MaxString := 'C:\HMI-Saved-Positions.xml';  				//disable for CE
   sFilePath       : T_MaxString := '\Hard Disk\HMI-Saved-Positions.xml';		//enable for CE
   (*sFilePathWrite = sFileFolder + time + sFileName*)
   bExecute        : BOOL; 
   sXPath          : T_MaxString := '/dataentry/MAIN.savedvalues';
   ntGetTime       : NT_GetTime;
   stMyTimestruct  : TIMESTRUCT;
   iState          : INT := 0;
   bTwentySec      : BOOL:= FALSE;
   bButton         : BOOL:= FALSE;
   bTwentySecOver  : BOOL;
   triggerWrite    : R_TRIG;
   triggerButton   : R_TRIG;
   i			   : INT:=1;
   LoadComplate   : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[triggerButton(CLK:= bButton);


CASE iState OF
0: (* initialize *)
   fbXmlSrvRead(
   	 pSymAddr  := ADR(savedvalues),
     cbSymSize := SIZEOF(savedvalues), 
     sFilePath := sFilePath,
     sXPath    := sXPath,
     bExecute  := TRUE
   );
   iState:= 1; 
   ;
   
1: (* wait for read operation *)
   fbXmlSrvRead(bExecute:= FALSE);
   IF NOT fbXmlSrvRead.bBusy AND NOT fbXmlSrvRead.bError THEN
     iState:= 2; 
	 LoadComplate := TRUE;
   ELSIF fbXmlSrvRead.bError THEN
     iState:= 100;
	 LoadComplate:=FALSE;
   END_IF
 
2: (* Write *)
	savedvalues.counter:=savedvalues.counter + 1;
	IF savedvalues.counter = 326767 THEN
		savedvalues.counter := 0;
	END_IF

   fbXmlSrvWrite(nMode:=XMLSRV_ADDMISSING, pSymAddr:= ADR(savedvalues),
   cbSymSize:= SIZEOF(savedvalues));
   ntGetTime(START:= TRUE, TIMESTR=>stMyTimestruct); (* get Windows time *)
   IF NOT ntGetTime.BUSY AND NOT ntGetTime.ERR THEN
      iState:= 5;
   ELSIF ntGetTime.ERR THEN
      iState:= 100;
 END_IF
   
5: (* working state *)
   ntGetTime(START:= FALSE);
   IF NOT ntGetTime.BUSY AND NOT ntGetTime.ERR THEN
      ntGetTime(START:= TRUE, TIMESTR=>stMyTimestruct);
   ELSIF ntGetTime.ERR THEN
      iState:= 100;
   END_IF

	IF (stMyTimestruct.wMinute = 0 AND stMyTimeStruct.wSecond = 5) OR (stMyTimestruct.wMinute = 15 AND stMyTimeStruct.wSecond = 5) OR (stMyTimeStruct.wMinute = 30 AND stMyTimeStruct.wSecond = 5) OR (stMyTimeStruct.wMinute = 45 AND stMyTimeStruct.wSecond = 5) OR (stMyTimeStruct.wMinute = 60 AND stMyTimeStruct.wSecond = 5) THEN
		bTwentySecOver:= TRUE;
		IF	GV_LIFT.STAGE_POSITION <> 0 THEN
			savedvalues.rStagePosition := GV_LIFT.STAGE_POSITION;
		END_IF
	ELSE
		bTwentySecOver:= FALSE;
	END_IF
	
   (* if 20s have passed => trigger writing-process *)
   triggerWrite(CLK:=bTwentySecOver);
   IF (triggerWrite.Q OR triggerButton.Q) AND NOT fbXmlSrvWrite.bBusy AND NOT fbXmlSrvWrite.bError THEN 
      (* write *)
      fbXmlSrvWrite(sFilePath:=sFilePath, sXPath:=sXPath, bExecute:= TRUE);

   ELSIF fbXmlSrvWrite.bError THEN
      iState:= 100;
   END_IF

   (* reset fbXmlSrvWrite *)
   IF fbXmlSrvWrite.bBusy AND NOT ntGetTime.ERR THEN
      fbXmlSrvWrite(bExecute:= FALSE);
   ELSIF ntGetTime.ERR THEN
      iState:= 100;
   END_IF
 
100: (* error state*) 
 ;

END_CASE]]></ST>
    </Implementation>
    <LineIds Name="XML">
      <LineId Id="518" Count="0" />
      <LineId Id="474" Count="0" />
      <LineId Id="553" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="350" Count="6" />
      <LineId Id="358" Count="1" />
      <LineId Id="420" Count="0" />
      <LineId Id="413" Count="3" />
      <LineId Id="573" Count="0" />
      <LineId Id="417" Count="1" />
      <LineId Id="575" Count="0" />
      <LineId Id="419" Count="0" />
      <LineId Id="360" Count="1" />
      <LineId Id="443" Count="3" />
      <LineId Id="442" Count="0" />
      <LineId Id="185" Count="9" />
      <LineId Id="200" Count="5" />
      <LineId Id="214" Count="0" />
      <LineId Id="544" Count="0" />
      <LineId Id="550" Count="0" />
      <LineId Id="577" Count="0" />
      <LineId Id="601" Count="1" />
      <LineId Id="551" Count="0" />
      <LineId Id="548" Count="0" />
      <LineId Id="543" Count="0" />
      <LineId Id="569" Count="0" />
      <LineId Id="215" Count="2" />
      <LineId Id="231" Count="5" />
      <LineId Id="554" Count="0" />
      <LineId Id="238" Count="9" />
      <LineId Id="73" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>